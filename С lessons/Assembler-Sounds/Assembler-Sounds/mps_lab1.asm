; - Марченкова А-07-17
; - 13 вариант
; - Ария Фигаро

.model small 
.data 
freqs dw 262,330,392,330,392,524,392,524,660,524,65535 ;частоты нот
times db 3,2,4,3,2,4,3,2,4,12,0 ;время длительности нот 
tempo db 200 ;длительность четверти в минуту 
music db 'Red_Command.$'
		 
.stack 100h ;величина стека 
.code 
start: 
mov ax, @data ;сохранение адреса данных 
mov ds,ax ;сохранение адреса данных в регистр данных DS
mov al,0B6h ;установка таймера в режим двоичного счетчика 
out 43h,al ;с последовательной загрузкой байтов делителя частоты 

lea bx, times ;сохранение адрес начала массива времени в стек 
push bx 
lea bx, freqs ;сохранение адреса начала массива частот в стек
push bx 

din: 
mov di, 0 ;включение динамика 
in al,61h 
or al,3 ;установка битов включения динамика 
out 61h,al ;установка управляющих сигналов динамика 

play: 
cmp di,0ffffh 
jz din 
pop bx ;выбор из стека указателя на элемент массива частот 
mov ax, [bx] ;выбор частоту 
cmp ax, 0ffffh ;сравнение на предмет конца массива 
jz end_play ;если истинно - выходим 
cmp ax,0 ;сравнение с паузой; 
jz pause 
call koef ;иначе - загрузка частоты, срабатывает динамик
 
m1: 
mov cx, bx ;сохранение указателя частоты 
pop bx ;выбор из стека указателя на элемент массива времени 
mov al, [bx] ;загружаем число четвертей 
inc bx ;увеличение указателя числа четвертей на 1 
push bx ;заносим в стек 
add cx, 2 ;увеличение указателя на частоту на 2 
push cx ;заносим в стек 
mul [tempo] ;умножение на длительность четверти дает длину ноты в АХ 
call timer ;создание задержки
jmp play ;переход к началу воспроизведения следующей ноты 

end_play: 
in al,61h ;выключение динамика 
and al,0FCh 
out 61h,al 
mov ah,4ch ;завершение работы
int 21h
 
pause: 
mov di, 0ffffh 
call paus 
jmp m1 

timer proc ;процедура-задержка - исходные данные ax - задержка в мс(кратная 55мс) 
cli ;запрет прерываний 
mov bh, 55 ;ввод длительности одного цикла опроса 
div bh ;разделив, получим в al частное - число отслеживаний 
mov bl, al ;перемещение числа отслеживаний 
mov ah, 0 ;получим время 
int 1ah 
add bl, dl ;добавление к числу отслеживаний младшей части "времени" 
timesearch: 
mov ah, 0 ;еще раз получаем время 
int 1ah
cmp dl, bl ;сравним отсчет времени с полученным числом отсчетов 
jz time_end ;если отсчет произошел, выходим из отслеживания 
jmp timesearch ;иначе продолжим отслеживать 
time_end: 
sti ;разрешим прерывания 
ret ;вернемся в программу 
endp 

koef proc ;процедура - вычислитель коэффициента деления частоты с занесением его в ;регистр таймера 
mov di, ax 
mov dx, 12h ;десятичному числу 1190000 соответствует 
mov ax, 2870h ;шестнадцатеричное число 122870h 
div di ;делим, частное в АХ 
out 42h,al ;выводим младший байт 
mov al, ah ;готовим старший к выводу 
out 42h,al ;выводим старший байт 
ret 
endp
paus proc ;процедура для паузы 
in al,61h ;выключение динамика 
and al,0FCh 
out 61h,al 
ret 
endp 

end 
